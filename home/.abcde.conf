#  vim: set ts=2 sts=2 sw=2 expandtab smarttab ft=sh:
# -----------------$HOME/.abcde.conf----------------- #
#
# A sample configuration file to convert music cds to
#      MP3, Ogg Vorbis, FLAC, Musepack & AAC
#          using abcde version 2.7
#
#       http://andrews-corner.org/abcde.html
# -------------------------------------------------- #

# Encode tracks immediately after reading. Saves disk space, gives
# better reading of 'scratchy' disks and better troubleshooting of
# encoding process but slows the operation of abcde quite a bit:
#LOWDISK=y

# Specify the method to use to retrieve the track information,
# the alternative is to specify 'cddb':
if which abcde-musicbrainz-tool > /dev/null 2>&1; then
  CDDBMETHOD=musicbrainz
  eval "`/usr/bin/perl -I$HOME/perl5/abcde/lib/perl5 -Mlocal::lib=$HOME/perl5/abcde`"
fi

# Make a local cache of cddb entries and then volunteer to use
# these entries when and if they match the cd:
CDDBCOPYLOCAL="y"
CDDBLOCALDIR="$HOME/.cache/cddb"
CDDBLOCALRECURSIVE="y"
CDDBUSELOCAL="y"

OGGENCODERSYNTAX=oggenc                # Specify encoder for Ogg Vorbis
MP3ENCODERSYNTAX=lame                  # Specify encoder for MP3
FLACENCODERSYNTAX=flac                 # Specify encoder for FLAC
#MPPENCODERSYNTAX=mppenc                # Specify encoder for Musepack
#AACENCODERSYNTAX=faac                  # Specify encoder for AAC

OGGENC=oggenc                          # Path to Ogg Vorbis encoder
LAME=lame                              # Path to MP3 encoder
FLAC=flac                              # Path to FLAC encoder
#MPPENC=mppenc                          # Path to Musepack encoder
#AACENC=faac                            # Path to AAC encoder

OGGENCOPTS='-q 3'                      # Options for Ogg Vorbis
LAMEOPTS='--preset extreme'            # Options for MP3
FLACOPTS='--verify --best'             # Options for FLAC
#MPPENCOPTS='--extreme'                 # Options for Musepack
#AACENCOPTS='-q 250 -w -s'              # Options for AAC

# specify -o on the command line
## #OUTPUTTYPE="ogg,mp3,flac,mpc,m4a"      # Encode to all 5 formats!

# The cd ripping program to use. There are a few choices here: cdda2wav,
# dagrab, cddafs (Mac OS X only) and flac.
CDROMREADERSYNTAX=cdparanoia
# CDROMREADERSYNTAX=cdda2wav

if [[ "$CDROMREADERSYNTAX" = "cdda2wav" ]] && [[ "$(uname)" = "Darwin" ]] ; then
  CDROM=/dev/disk2
  # CDROM=`mount | awk '/Audio CD/ { print $1 }'`
  # CDROM=${CDROM:-/dev/disk3}
  diskutil unmountDisk $CDROM
fi

# Give the location of the ripping program and pass any extra options:
CDPARANOIA=cdparanoia
CDPARANOIAOPTS="--never-skip=10"

CDDA2WAV=cdda2wav

NORMALIZERSYNTAX=normalize
# Default is 'normalize-audio' which is how debian renames it.  Check for original.
which $NORMALIZE > /dev/null 2>&1 || NORMALIZE=normalize

# Give the location of the CD identification program:
CDDISCID=cd-discid

# Give the base location here for the encoded music files.
OUTPUTDIR="$HOME/data/music/_incoming_"

# The default actions that abcde will take.
ACTIONS=cddb,read,getalbumart,normalize,encode,tag,move,clean

# Decide here how you want the tracks labelled for a standard 'single-artist',
# multi-track encode and also for a multi-track, 'various-artist' encode:
OUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${TRACKNUM}-${TRACKFILE}'
VAOUTPUTFORMAT='various/${ALBUMFILE}/${TRACKNUM}-${ARTISTFILE}-${TRACKFILE}'

# Decide here how you want the tracks labelled for a standard 'single-artist',
# single-track encode and also for a single-track 'various-artist' encode.
# (Create a single-track encode with 'abcde -1' from the commandline.)
ONETRACKOUTPUTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}'
VAONETRACKOUTPUTFORMAT='${OUTPUT}/various/${ALBUMFILE}'

# Create playlists for single and various-artist encodes. I would suggest
# commenting these out for single-track encoding.
#PLAYLISTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}/${ALBUMFILE}.m3u'
#VAPLAYLISTFORMAT='${OUTPUT}/various/${ALBUMFILE}/${ALBUMFILE}.m3u'

mungefilename ()
{
  #echo "$@" | sed s,:,-,g | tr / _ | tr -d \'\"\?\[:cntrl:\]
  echo "$*" | perl -CO -Mutf8 -pe '
    utf8::decode($_) || utf8::upgrade($_); # If not utf-8, try latin1.

    s/&#39;/\x27/g;             # Where do these come from?
    s/^(.+),\s*(the)$/$2 $1/i;  # Put "The" back at the front.

    $_ = lc;                    # Lowercase with unicode support.
    tr/áëéíñóöúü/aeeinoouu/;    # ascii
    s/\s+/_/g;

    # Special entities.
    my %chars = qw( + plus & and = equals );
    s/([${\ join(q[], keys(%chars)) }])/$chars{$1}/g;

    s/[\x27\x{2019}]//g;        # strip single quotes (old and new)
    s/[^0-9a-zA-Z_]+/_/g;       # tr
    s/_+/_/g;                   # squeeze
    s/^_//g; s/_$//g;           # trim
    s/^the_//;                  # no leading "the" in filenames
  '
}

# could define post_read() to run clean_filenames --song

# extra options
BATCHNORM=y
MAXPROCS=4                              # Run a few encoders simultaneously
PADTRACKS=y                             # Makes tracks 01 02 not 1 2
EXTRAVERBOSE=y                          # Useful for debugging
EJECTCD=y                               # Please eject cd when finished :-)
CDDBPROTO=6                             # retrieve CDDB entries in UTF-8 format


# http://www.andrews-corner.org/getalbumart.html
# album art download options (see glyrc's help for details with more detailed
# examples here: https://github.com/sahib/glyr/wiki/Commandline-arguments).
# For example use '--formats jpg;jpeg' to only search for JPEG images
# These options: '--from <provider>' and '--lang <langcode>' might also be useful
#GLYRCOPTS=
ALBUMARTFILE="cover.jpg"
ALBUMARTTYPE="JPEG"
#ALBUMARTALWAYSCONVERT="y"
#CONVERTOPTS="-strip -interlace Plane -gaussian-blur 0.05 -quality 85%"

# On mac don't boot XQuartz just for this.
if [ X$(uname) = "XDarwin" ] ; then
  DISPLAYCMD=open
  DISPLAYCMDOPTS=''
fi

make-non-interactive () {
  local fn="$1" prefix="orig_interactive_"
  eval "$prefix$(declare -f $fn)"
  eval "$fn"' () {
    local ORIG_INTERACTIVE="$INTERACTIVE"
    INTERACTIVE=n
    '"$prefix$fn"' "$@" &
    albumartpid=$!
    #local result=$?
    INTERACTIVE="$ORIG_INTERACTIVE"
    #return $result
    return 0
  }'
}

make-non-interactive do_getalbumart

if [[ -d unknown_artist/unknown_album ]]; then
  echo 'Found unknown_artist/unknown_album.  What is it?' >&2
  exit 1
fi

WAVOUTPUTDIR="$HOME/.cache/abcde-wavoutputdir"

post_encode () {
  wait $albumartpid
}
